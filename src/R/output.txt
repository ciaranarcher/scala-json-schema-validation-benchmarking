[0m[[0minfo[0m] [0mLoading project definition from /home/dave/src/scala-map-benchmarking/project[0m
[0m[[0minfo[0m] [0mSet current project to scala-map-benchmarking (in build file:/home/dave/src/scala-map-benchmarking/)[0m
[0m[[0minfo[0m] [0mRunning cat.dvmlls.Runner --warmupMillis 3000 --runMillis 1000[0m
[0m[[0minfo[0m] [0m 0% Scenario{vm=java, trial=0, benchmark=Insert, implementation=JU_HM, length=100, order=sequential} 3511.58 ns; Ïƒ=15.83 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m 0% Scenario{vm=java, trial=0, benchmark=Get, implementation=JU_HM, length=100, order=sequential} 2059.54 ns; Ïƒ=10.76 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m 1% Scenario{vm=java, trial=0, benchmark=Delete, implementation=JU_HM, length=100, order=sequential} 1395.51 ns; Ïƒ=3.77 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m 1% Scenario{vm=java, trial=0, benchmark=Update, implementation=JU_HM, length=100, order=sequential} 3474.95 ns; Ïƒ=16.36 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m 1% Scenario{vm=java, trial=0, benchmark=Merge, implementation=JU_HM, length=100, order=sequential} 1105.28 ns; Ïƒ=5.21 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m 1% Scenario{vm=java, trial=0, benchmark=Insert, implementation=JU_C_HM, length=100, order=sequential} 6175.14 ns; Ïƒ=13.91 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m 2% Scenario{vm=java, trial=0, benchmark=Get, implementation=JU_C_HM, length=100, order=sequential} 2604.67 ns; Ïƒ=11.94 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m 2% Scenario{vm=java, trial=0, benchmark=Delete, implementation=JU_C_HM, length=100, order=sequential} 3629.46 ns; Ïƒ=23.38 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m 2% Scenario{vm=java, trial=0, benchmark=Update, implementation=JU_C_HM, length=100, order=sequential} 6173.14 ns; Ïƒ=43.64 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m 3% Scenario{vm=java, trial=0, benchmark=Merge, implementation=JU_C_HM, length=100, order=sequential} 3766.83 ns; Ïƒ=28.13 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m 3% Scenario{vm=java, trial=0, benchmark=Insert, implementation=JU_TM, length=100, order=sequential} 4426.30 ns; Ïƒ=7.42 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m 3% Scenario{vm=java, trial=0, benchmark=Get, implementation=JU_TM, length=100, order=sequential} 3739.55 ns; Ïƒ=117.28 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m 3% Scenario{vm=java, trial=0, benchmark=Delete, implementation=JU_TM, length=100, order=sequential} 1439.58 ns; Ïƒ=4.84 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m 4% Scenario{vm=java, trial=0, benchmark=Update, implementation=JU_TM, length=100, order=sequential} 4445.20 ns; Ïƒ=24.46 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m 4% Scenario{vm=java, trial=0, benchmark=Merge, implementation=JU_TM, length=100, order=sequential} 1905.21 ns; Ïƒ=8.45 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m 4% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_M_HM, length=100, order=sequential} 4013.34 ns; Ïƒ=12.30 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m 4% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_M_HM, length=100, order=sequential} 2904.57 ns; Ïƒ=15.25 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m 5% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_M_HM, length=100, order=sequential} 2189.70 ns; Ïƒ=8.94 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m 5% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_M_HM, length=100, order=sequential} 4227.00 ns; Ïƒ=15.74 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m 5% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_M_HM, length=100, order=sequential} 2114.32 ns; Ïƒ=8.78 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m 6% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_M_LoM, length=100, order=sequential} 3247.44 ns; Ïƒ=11.37 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m 6% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_M_LoM, length=100, order=sequential} 1700.25 ns; Ïƒ=10.48 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m 6% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_M_LoM, length=100, order=sequential} 2229.41 ns; Ïƒ=20.75 ns @ 5 trials[0m
[0m[[0minfo[0m] [0m 6% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_M_LoM, length=100, order=sequential} 3198.87 ns; Ïƒ=5.45 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m 7% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_M_LoM, length=100, order=sequential} 1418.34 ns; Ïƒ=2.58 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m 7% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_M_LsM, length=100, order=sequential} 135533.06 ns; Ïƒ=668.78 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m 7% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_M_LsM, length=100, order=sequential} 35683.99 ns; Ïƒ=88.33 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m 8% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_M_LsM, length=100, order=sequential} 2032.09 ns; Ïƒ=9.07 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m 8% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_M_LsM, length=100, order=sequential} 93244.68 ns; Ïƒ=766.10 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m 8% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_M_LsM, length=100, order=sequential} 133305.88 ns; Ïƒ=225.97 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m 8% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_M_LHM, length=100, order=sequential} 4111.10 ns; Ïƒ=5.37 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m 9% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_M_LHM, length=100, order=sequential} 2912.81 ns; Ïƒ=6.17 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m 9% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_M_LHM, length=100, order=sequential} 2182.74 ns; Ïƒ=2.54 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m 9% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_M_LHM, length=100, order=sequential} 4491.10 ns; Ïƒ=44.07 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m 9% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_M_LHM, length=100, order=sequential} 1887.19 ns; Ïƒ=13.75 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m10% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_M_OHM, length=100, order=sequential} 3542.76 ns; Ïƒ=8.58 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m10% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_M_OHM, length=100, order=sequential} 1889.51 ns; Ïƒ=10.39 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m10% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_M_OHM, length=100, order=sequential} 1663.89 ns; Ïƒ=2.97 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m11% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_M_OHM, length=100, order=sequential} 3854.61 ns; Ïƒ=19.67 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m11% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_M_OHM, length=100, order=sequential} 3553.42 ns; Ïƒ=39.42 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m11% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_I_HM, length=100, order=sequential} 10937.73 ns; Ïƒ=73.48 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m11% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_I_HM, length=100, order=sequential} 3293.79 ns; Ïƒ=12.50 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m12% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_I_HM, length=100, order=sequential} 1257.94 ns; Ïƒ=1.88 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m12% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_I_HM, length=100, order=sequential} 10598.04 ns; Ïƒ=71.58 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m12% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_I_HM, length=100, order=sequential} 16737.42 ns; Ïƒ=61.38 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m13% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_I_LoM, length=100, order=sequential} 7694.20 ns; Ïƒ=12.50 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m13% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_I_LoM, length=100, order=sequential} 2571.46 ns; Ïƒ=6.58 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m13% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_I_LoM, length=100, order=sequential} 1084.53 ns; Ïƒ=4.01 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m13% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_I_LoM, length=100, order=sequential} 7643.29 ns; Ïƒ=21.62 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m14% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_I_LoM, length=100, order=sequential} 2296.50 ns; Ïƒ=13.80 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m14% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_I_IM, length=100, order=sequential} 7761.72 ns; Ïƒ=11.54 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m14% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_I_IM, length=100, order=sequential} 3348.60 ns; Ïƒ=8.55 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m14% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_I_IM, length=100, order=sequential} 1121.59 ns; Ïƒ=3.35 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m15% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_I_IM, length=100, order=sequential} 7692.02 ns; Ïƒ=101.62 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m15% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_I_IM, length=100, order=sequential} 2298.25 ns; Ïƒ=15.17 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m15% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_I_TM, length=100, order=sequential} 10087.77 ns; Ïƒ=320.74 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m16% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_I_TM, length=100, order=sequential} 6508.05 ns; Ïƒ=331.04 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m16% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_I_TM, length=100, order=sequential} 1537.49 ns; Ïƒ=7.43 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m16% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_I_TM, length=100, order=sequential} 9723.89 ns; Ïƒ=13.67 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m16% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_I_TM, length=100, order=sequential} 8090.04 ns; Ïƒ=36.11 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m17% Scenario{vm=java, trial=0, benchmark=Insert, implementation=JU_HM, length=1000, order=sequential} 51842.98 ns; Ïƒ=223.66 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m17% Scenario{vm=java, trial=0, benchmark=Get, implementation=JU_HM, length=1000, order=sequential} 22762.62 ns; Ïƒ=27.02 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m17% Scenario{vm=java, trial=0, benchmark=Delete, implementation=JU_HM, length=1000, order=sequential} 13178.95 ns; Ïƒ=72.01 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m18% Scenario{vm=java, trial=0, benchmark=Update, implementation=JU_HM, length=1000, order=sequential} 51831.88 ns; Ïƒ=1566.52 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m18% Scenario{vm=java, trial=0, benchmark=Merge, implementation=JU_HM, length=1000, order=sequential} 17606.92 ns; Ïƒ=714.42 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m18% Scenario{vm=java, trial=0, benchmark=Insert, implementation=JU_C_HM, length=1000, order=sequential} 65433.14 ns; Ïƒ=3045.23 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m18% Scenario{vm=java, trial=0, benchmark=Get, implementation=JU_C_HM, length=1000, order=sequential} 33849.04 ns; Ïƒ=461.94 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m19% Scenario{vm=java, trial=0, benchmark=Delete, implementation=JU_C_HM, length=1000, order=sequential} 42170.32 ns; Ïƒ=3007.28 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m19% Scenario{vm=java, trial=0, benchmark=Update, implementation=JU_C_HM, length=1000, order=sequential} 70794.29 ns; Ïƒ=8491.20 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m19% Scenario{vm=java, trial=0, benchmark=Merge, implementation=JU_C_HM, length=1000, order=sequential} 38186.44 ns; Ïƒ=146.86 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m19% Scenario{vm=java, trial=0, benchmark=Insert, implementation=JU_TM, length=1000, order=sequential} 76948.84 ns; Ïƒ=522.44 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m20% Scenario{vm=java, trial=0, benchmark=Get, implementation=JU_TM, length=1000, order=sequential} 73618.19 ns; Ïƒ=91.85 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m20% Scenario{vm=java, trial=0, benchmark=Delete, implementation=JU_TM, length=1000, order=sequential} 14524.62 ns; Ïƒ=16.73 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m20% Scenario{vm=java, trial=0, benchmark=Update, implementation=JU_TM, length=1000, order=sequential} 72967.53 ns; Ïƒ=349.30 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m21% Scenario{vm=java, trial=0, benchmark=Merge, implementation=JU_TM, length=1000, order=sequential} 58587.04 ns; Ïƒ=245.35 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m21% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_M_HM, length=1000, order=sequential} 40340.39 ns; Ïƒ=144.41 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m21% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_M_HM, length=1000, order=sequential} 35083.42 ns; Ïƒ=223.02 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m21% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_M_HM, length=1000, order=sequential} 16105.51 ns; Ïƒ=25.04 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m22% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_M_HM, length=1000, order=sequential} 39255.83 ns; Ïƒ=55.67 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m22% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_M_HM, length=1000, order=sequential} 19764.03 ns; Ïƒ=64.59 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m22% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_M_LoM, length=1000, order=sequential} 33265.96 ns; Ïƒ=61.49 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m23% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_M_LoM, length=1000, order=sequential} 19453.18 ns; Ïƒ=117.46 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m23% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_M_LoM, length=1000, order=sequential} 29755.65 ns; Ïƒ=206.59 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m23% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_M_LoM, length=1000, order=sequential} 30675.86 ns; Ïƒ=61.64 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m23% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_M_LoM, length=1000, order=sequential} 15985.49 ns; Ïƒ=78.89 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m24% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_M_LsM, length=1000, order=sequential} 12312126.34 ns; Ïƒ=386587.86 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m24% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_M_LsM, length=1000, order=sequential} 3112340.64 ns; Ïƒ=23182.66 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m24% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_M_LsM, length=1000, order=sequential} 21403.83 ns; Ïƒ=179.19 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m24% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_M_LsM, length=1000, order=sequential} 7508778.61 ns; Ïƒ=89008.27 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m25% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_M_LsM, length=1000, order=sequential} 9980301.88 ns; Ïƒ=100611.54 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m25% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_M_LHM, length=1000, order=sequential} 43882.90 ns; Ïƒ=279.38 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m25% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_M_LHM, length=1000, order=sequential} 28532.14 ns; Ïƒ=109.82 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m26% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_M_LHM, length=1000, order=sequential} 16233.18 ns; Ïƒ=38.09 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m26% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_M_LHM, length=1000, order=sequential} 45123.68 ns; Ïƒ=293.38 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m26% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_M_LHM, length=1000, order=sequential} 22210.29 ns; Ïƒ=164.33 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m26% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_M_OHM, length=1000, order=sequential} 36896.98 ns; Ïƒ=124.77 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m27% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_M_OHM, length=1000, order=sequential} 21905.98 ns; Ïƒ=132.28 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m27% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_M_OHM, length=1000, order=sequential} 20821.15 ns; Ïƒ=143.39 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m27% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_M_OHM, length=1000, order=sequential} 37172.70 ns; Ïƒ=104.64 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m28% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_M_OHM, length=1000, order=sequential} 32259.32 ns; Ïƒ=78.45 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m28% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_I_HM, length=1000, order=sequential} 190250.76 ns; Ïƒ=1376.46 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m28% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_I_HM, length=1000, order=sequential} 43913.16 ns; Ïƒ=138.43 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m28% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_I_HM, length=1000, order=sequential} 16612.09 ns; Ïƒ=110.75 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m29% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_I_HM, length=1000, order=sequential} 164126.37 ns; Ïƒ=627.01 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m29% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_I_HM, length=1000, order=sequential} 240650.44 ns; Ïƒ=1241.42 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m29% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_I_LoM, length=1000, order=sequential} 151104.84 ns; Ïƒ=531.92 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m29% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_I_LoM, length=1000, order=sequential} 54921.84 ns; Ïƒ=331.14 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m30% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_I_LoM, length=1000, order=sequential} 12132.70 ns; Ïƒ=55.01 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m30% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_I_LoM, length=1000, order=sequential} 138059.82 ns; Ïƒ=472.87 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m30% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_I_LoM, length=1000, order=sequential} 25491.12 ns; Ïƒ=18.55 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m31% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_I_IM, length=1000, order=sequential} 137427.98 ns; Ïƒ=739.43 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m31% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_I_IM, length=1000, order=sequential} 59265.10 ns; Ïƒ=445.77 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m31% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_I_IM, length=1000, order=sequential} 12132.72 ns; Ïƒ=101.37 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m31% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_I_IM, length=1000, order=sequential} 119141.98 ns; Ïƒ=1163.81 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m32% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_I_IM, length=1000, order=sequential} 26187.01 ns; Ïƒ=77.79 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m32% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_I_TM, length=1000, order=sequential} 184360.15 ns; Ïƒ=484.91 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m32% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_I_TM, length=1000, order=sequential} 108353.90 ns; Ïƒ=618.10 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m33% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_I_TM, length=1000, order=sequential} 14475.22 ns; Ïƒ=30.05 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m33% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_I_TM, length=1000, order=sequential} 185297.72 ns; Ïƒ=492.79 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m33% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_I_TM, length=1000, order=sequential} 160628.47 ns; Ïƒ=271.93 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m33% Scenario{vm=java, trial=0, benchmark=Insert, implementation=JU_HM, length=10000, order=sequential} 444568.57 ns; Ïƒ=6707.20 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m34% Scenario{vm=java, trial=0, benchmark=Get, implementation=JU_HM, length=10000, order=sequential} 252438.71 ns; Ïƒ=483.46 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m34% Scenario{vm=java, trial=0, benchmark=Delete, implementation=JU_HM, length=10000, order=sequential} 159802.55 ns; Ïƒ=63.21 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m34% Scenario{vm=java, trial=0, benchmark=Update, implementation=JU_HM, length=10000, order=sequential} 376216.16 ns; Ïƒ=4514.96 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m34% Scenario{vm=java, trial=0, benchmark=Merge, implementation=JU_HM, length=10000, order=sequential} 187567.06 ns; Ïƒ=1481.40 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m35% Scenario{vm=java, trial=0, benchmark=Insert, implementation=JU_C_HM, length=10000, order=sequential} 687178.84 ns; Ïƒ=8554.71 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m35% Scenario{vm=java, trial=0, benchmark=Get, implementation=JU_C_HM, length=10000, order=sequential} 369778.11 ns; Ïƒ=25426.53 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m35% Scenario{vm=java, trial=0, benchmark=Delete, implementation=JU_C_HM, length=10000, order=sequential} 304137.61 ns; Ïƒ=595.74 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m36% Scenario{vm=java, trial=0, benchmark=Update, implementation=JU_C_HM, length=10000, order=sequential} 710746.90 ns; Ïƒ=3416.64 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m36% Scenario{vm=java, trial=0, benchmark=Merge, implementation=JU_C_HM, length=10000, order=sequential} 437362.29 ns; Ïƒ=1316.93 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m36% Scenario{vm=java, trial=0, benchmark=Insert, implementation=JU_TM, length=10000, order=sequential} 813363.15 ns; Ïƒ=7977.94 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m36% Scenario{vm=java, trial=0, benchmark=Get, implementation=JU_TM, length=10000, order=sequential} 646530.28 ns; Ïƒ=9423.59 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m37% Scenario{vm=java, trial=0, benchmark=Delete, implementation=JU_TM, length=10000, order=sequential} 160288.02 ns; Ïƒ=1141.62 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m37% Scenario{vm=java, trial=0, benchmark=Update, implementation=JU_TM, length=10000, order=sequential} 845101.37 ns; Ïƒ=6211.11 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m37% Scenario{vm=java, trial=0, benchmark=Merge, implementation=JU_TM, length=10000, order=sequential} 706375.93 ns; Ïƒ=3627.32 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m38% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_M_HM, length=10000, order=sequential} 563824.74 ns; Ïƒ=4079.81 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m38% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_M_HM, length=10000, order=sequential} 401177.53 ns; Ïƒ=6580.37 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m38% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_M_HM, length=10000, order=sequential} 178561.81 ns; Ïƒ=1068.26 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m38% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_M_HM, length=10000, order=sequential} 551256.53 ns; Ïƒ=5314.54 ns @ 5 trials[0m
[0m[[0minfo[0m] [0m39% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_M_HM, length=10000, order=sequential} 297123.83 ns; Ïƒ=1501.45 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m39% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_M_LoM, length=10000, order=sequential} 347836.76 ns; Ïƒ=10653.03 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m39% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_M_LoM, length=10000, order=sequential} 252526.38 ns; Ïƒ=1977.70 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m39% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_M_LoM, length=10000, order=sequential} 321383.18 ns; Ïƒ=629.00 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m40% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_M_LoM, length=10000, order=sequential} 347750.51 ns; Ïƒ=7123.43 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m40% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_M_LoM, length=10000, order=sequential} 288444.12 ns; Ïƒ=1503.18 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m40% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_M_LsM, length=10000, order=sequential} 937156123.00 ns; Ïƒ=66793218.74 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m41% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_M_LsM, length=10000, order=sequential} 155310199.00 ns; Ïƒ=1543192.16 ns @ 7 trials[0m
[0m[[0minfo[0m] [0m41% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_M_LsM, length=10000, order=sequential} 24168811.41 ns; Ïƒ=9367026.22 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m41% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_M_LsM, length=10000, order=sequential} 1442442929.00 ns; Ïƒ=6407119.74 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m41% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_M_LsM, length=10000, order=sequential} 701145353.00 ns; Ïƒ=2909242.07 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m42% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_M_LHM, length=10000, order=sequential} 488629.19 ns; Ïƒ=4673.55 ns @ 8 trials[0m
[0m[[0minfo[0m] [0m42% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_M_LHM, length=10000, order=sequential} 368611.71 ns; Ïƒ=3666.91 ns @ 9 trials[0m
[0m[[0minfo[0m] [0m42% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_M_LHM, length=10000, order=sequential} 177130.36 ns; Ïƒ=54.06 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m43% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_M_LHM, length=10000, order=sequential} 534451.00 ns; Ïƒ=5963.01 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m43% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_M_LHM, length=10000, order=sequential} 274268.13 ns; Ïƒ=4827.48 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m43% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_M_OHM, length=10000, order=sequential} 371991.64 ns; Ïƒ=4329.89 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m43% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_M_OHM, length=10000, order=sequential} 175700.59 ns; Ïƒ=928.40 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m44% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_M_OHM, length=10000, order=sequential} 207237.57 ns; Ïƒ=1011.06 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m44% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_M_OHM, length=10000, order=sequential} 361691.18 ns; Ïƒ=18634.96 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m44% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_M_OHM, length=10000, order=sequential} 464635.32 ns; Ïƒ=4124.53 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m44% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_I_HM, length=10000, order=sequential} 3056132.58 ns; Ïƒ=8494.05 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m45% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_I_HM, length=10000, order=sequential} 549164.02 ns; Ïƒ=16668.44 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m45% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_I_HM, length=10000, order=sequential} 159135.05 ns; Ïƒ=1481.03 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m45% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_I_HM, length=10000, order=sequential} 3050981.98 ns; Ïƒ=185082.39 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m46% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_I_HM, length=10000, order=sequential} 3650553.33 ns; Ïƒ=11343.50 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m46% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_I_LoM, length=10000, order=sequential} 2298407.66 ns; Ïƒ=14741.47 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m46% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_I_LoM, length=10000, order=sequential} 681087.63 ns; Ïƒ=6660.89 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m46% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_I_LoM, length=10000, order=sequential} 132983.40 ns; Ïƒ=503.44 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m47% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_I_LoM, length=10000, order=sequential} 2277368.98 ns; Ïƒ=32822.97 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m47% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_I_LoM, length=10000, order=sequential} 329329.24 ns; Ïƒ=7529.55 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m47% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_I_IM, length=10000, order=sequential} 2146191.02 ns; Ïƒ=19466.52 ns @ 4 trials[0m
[0m[[0minfo[0m] [0m48% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_I_IM, length=10000, order=sequential} 650743.55 ns; Ïƒ=4273.59 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m48% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_I_IM, length=10000, order=sequential} 132911.01 ns; Ïƒ=2776.38 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m48% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_I_IM, length=10000, order=sequential} 2038556.69 ns; Ïƒ=23359.81 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m48% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_I_IM, length=10000, order=sequential} 306414.61 ns; Ïƒ=1441.04 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m49% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_I_TM, length=10000, order=sequential} 2424274.83 ns; Ïƒ=10501.43 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m49% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_I_TM, length=10000, order=sequential} 624137.66 ns; Ïƒ=7053.65 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m49% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_I_TM, length=10000, order=sequential} 151347.36 ns; Ïƒ=1312.81 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m49% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_I_TM, length=10000, order=sequential} 2457322.86 ns; Ïƒ=18203.72 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m50% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_I_TM, length=10000, order=sequential} 2206199.32 ns; Ïƒ=4540.95 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m50% Scenario{vm=java, trial=0, benchmark=Insert, implementation=JU_HM, length=100, order=random} 3790.41 ns; Ïƒ=34.76 ns @ 6 trials[0m
[0m[[0minfo[0m] [0m50% Scenario{vm=java, trial=0, benchmark=Get, implementation=JU_HM, length=100, order=random} 2051.40 ns; Ïƒ=19.15 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m51% Scenario{vm=java, trial=0, benchmark=Delete, implementation=JU_HM, length=100, order=random} 1138.59 ns; Ïƒ=10.70 ns @ 7 trials[0m
[0m[[0minfo[0m] [0m51% Scenario{vm=java, trial=0, benchmark=Update, implementation=JU_HM, length=100, order=random} 4738.90 ns; Ïƒ=21.03 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m51% Scenario{vm=java, trial=0, benchmark=Merge, implementation=JU_HM, length=100, order=random} 1590.68 ns; Ïƒ=62.05 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m51% Scenario{vm=java, trial=0, benchmark=Insert, implementation=JU_C_HM, length=100, order=random} 6267.87 ns; Ïƒ=283.09 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m52% Scenario{vm=java, trial=0, benchmark=Get, implementation=JU_C_HM, length=100, order=random} 2861.55 ns; Ïƒ=169.38 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m52% Scenario{vm=java, trial=0, benchmark=Delete, implementation=JU_C_HM, length=100, order=random} 3587.90 ns; Ïƒ=414.25 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m52% Scenario{vm=java, trial=0, benchmark=Update, implementation=JU_C_HM, length=100, order=random} 6493.43 ns; Ïƒ=193.22 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m53% Scenario{vm=java, trial=0, benchmark=Merge, implementation=JU_C_HM, length=100, order=random} 3588.20 ns; Ïƒ=19.34 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m53% Scenario{vm=java, trial=0, benchmark=Insert, implementation=JU_TM, length=100, order=random} 4023.56 ns; Ïƒ=34.47 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m53% Scenario{vm=java, trial=0, benchmark=Get, implementation=JU_TM, length=100, order=random} 3641.41 ns; Ïƒ=261.24 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m53% Scenario{vm=java, trial=0, benchmark=Delete, implementation=JU_TM, length=100, order=random} 1134.11 ns; Ïƒ=52.42 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m54% Scenario{vm=java, trial=0, benchmark=Update, implementation=JU_TM, length=100, order=random} 4333.88 ns; Ïƒ=9.41 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m54% Scenario{vm=java, trial=0, benchmark=Merge, implementation=JU_TM, length=100, order=random} 2299.36 ns; Ïƒ=21.14 ns @ 6 trials[0m
[0m[[0minfo[0m] [0m54% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_M_HM, length=100, order=random} 3534.68 ns; Ïƒ=23.62 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m54% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_M_HM, length=100, order=random} 2688.92 ns; Ïƒ=95.85 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m55% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_M_HM, length=100, order=random} 2027.05 ns; Ïƒ=6.15 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m55% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_M_HM, length=100, order=random} 3546.17 ns; Ïƒ=10.11 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m55% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_M_HM, length=100, order=random} 2103.82 ns; Ïƒ=98.02 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m56% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_M_LoM, length=100, order=random} 3190.35 ns; Ïƒ=561.38 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m56% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_M_LoM, length=100, order=random} 1514.05 ns; Ïƒ=50.26 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m56% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_M_LoM, length=100, order=random} 1984.04 ns; Ïƒ=10.71 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m56% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_M_LoM, length=100, order=random} 2970.48 ns; Ïƒ=14.62 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m57% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_M_LoM, length=100, order=random} 1745.18 ns; Ïƒ=8.24 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m57% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_M_LsM, length=100, order=random} 131852.64 ns; Ïƒ=661.02 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m57% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_M_LsM, length=100, order=random} 32900.83 ns; Ïƒ=53.80 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m57% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_M_LsM, length=100, order=random} 1508.74 ns; Ïƒ=5.95 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m58% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_M_LsM, length=100, order=random} 93360.30 ns; Ïƒ=916.45 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m58% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_M_LsM, length=100, order=random} 180890.19 ns; Ïƒ=10073.46 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m58% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_M_LHM, length=100, order=random} 3907.25 ns; Ïƒ=11.17 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m59% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_M_LHM, length=100, order=random} 2737.83 ns; Ïƒ=92.30 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m59% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_M_LHM, length=100, order=random} 2051.67 ns; Ïƒ=8.73 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m59% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_M_LHM, length=100, order=random} 3824.48 ns; Ïƒ=18.76 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m59% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_M_LHM, length=100, order=random} 1848.86 ns; Ïƒ=14.07 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m60% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_M_OHM, length=100, order=random} 3109.65 ns; Ïƒ=18.63 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m60% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_M_OHM, length=100, order=random} 1520.37 ns; Ïƒ=4.71 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m60% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_M_OHM, length=100, order=random} 1291.62 ns; Ïƒ=1.15 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m61% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_M_OHM, length=100, order=random} 3112.09 ns; Ïƒ=30.01 ns @ 4 trials[0m
[0m[[0minfo[0m] [0m61% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_M_OHM, length=100, order=random} 3820.28 ns; Ïƒ=13.30 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m61% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_I_HM, length=100, order=random} 11303.01 ns; Ïƒ=194.52 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m61% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_I_HM, length=100, order=random} 3529.84 ns; Ïƒ=209.32 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m62% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_I_HM, length=100, order=random} 1222.49 ns; Ïƒ=22.78 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m62% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_I_HM, length=100, order=random} 11698.41 ns; Ïƒ=782.33 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m62% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_I_HM, length=100, order=random} 22627.14 ns; Ïƒ=72.90 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m63% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_I_LoM, length=100, order=random} 8348.74 ns; Ïƒ=67.31 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m63% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_I_LoM, length=100, order=random} 2498.02 ns; Ïƒ=15.56 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m63% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_I_LoM, length=100, order=random} 1050.85 ns; Ïƒ=17.21 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m63% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_I_LoM, length=100, order=random} 8284.30 ns; Ïƒ=20.06 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m64% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_I_LoM, length=100, order=random} 3294.36 ns; Ïƒ=189.98 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m64% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_I_IM, length=100, order=random} 7996.14 ns; Ïƒ=43.32 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m64% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_I_IM, length=100, order=random} 4668.24 ns; Ïƒ=828.87 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m64% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_I_IM, length=100, order=random} 1825.78 ns; Ïƒ=347.39 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m65% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_I_IM, length=100, order=random} 7765.18 ns; Ïƒ=43.31 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m65% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_I_IM, length=100, order=random} 3078.45 ns; Ïƒ=38.14 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m65% Scenario{vm=java, trial=0, benchmark=Insert, implementation=SC_I_TM, length=100, order=random} 16926.98 ns; Ïƒ=3403.65 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m66% Scenario{vm=java, trial=0, benchmark=Get, implementation=SC_I_TM, length=100, order=random} 3679.49 ns; Ïƒ=152.97 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m66% Scenario{vm=java, trial=0, benchmark=Delete, implementation=SC_I_TM, length=100, order=random} 1423.91 ns; Ïƒ=182.95 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m66% Scenario{vm=java, trial=0, benchmark=Update, implementation=SC_I_TM, length=100, order=random} 10642.68 ns; Ïƒ=1450.36 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m66% Scenario{vm=java, trial=0, benchmark=Merge, implementation=SC_I_TM, length=100, order=random} 10415.64 ns; Ïƒ=3129.93 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m67% Scenario{vm=java, trial=0, benchmark=Insert, implementation=JU_HM, length=1000, order=random} 45767.09 ns; Ïƒ=2788.58 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m67% Scenario{vm=java, trial=0, benchmark=Get, implementation=JU_HM, length=1000, order=random} 23103.77 ns; Ïƒ=1007.51 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m67% Scenario{vm=java, trial=0, benchmark=Delete, implementation=JU_HM, length=1000, order=random} 14952.08 ns; Ïƒ=119.75 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m68% Scenario{vm=java, trial=0, benchmark=Update, implementation=JU_HM, length=1000, order=random} 45607.49 ns; Ïƒ=372.06 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m68% Scenario{vm=java, trial=0, benchmark=Merge, implementation=JU_HM, length=1000, order=random} 20693.10 ns; Ïƒ=260.12 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m68% Scenario{vm=java, trial=0, benchmark=Insert, implementation=JU_C_HM, length=1000, order=random} 60098.05 ns; Ïƒ=245.84 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m68% Scenario{vm=java, trial=0, benchmark=Get, implementation=JU_C_HM, length=1000, order=random} 26044.34 ns; Ïƒ=53.29 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m69% Scenario{vm=java, trial=0, benchmark=Delete, implementation=JU_C_HM, length=1000, order=random} 32369.37 ns; Ïƒ=140.36 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m69% Scenario{vm=java, trial=0, benchmark=Update, implementation=JU_C_HM, length=1000, order=random} 61793.14 ns; Ïƒ=323.86 ns @ 3 trials[0m
[0m[[0minfo[0m] [0m69% Scenario{vm=java, trial=0, benchmark=Merge, implementation=JU_C_HM, length=1000, order=random} 34562.06 ns; Ïƒ=856.32 ns @ 10 trials[0m
[0m[[0minfo[0m] [0m69% Scenario{vm=java, trial=0, benchmark=Insert, implementation=JU_TM, length=1000, order=random} 85700.33 ns; Ïƒ=640.69 ns @ 3 trials[0m
